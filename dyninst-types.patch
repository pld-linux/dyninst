--- dyninst-9.3.1/symtabAPI/src/Object-elf.C.orig	2017-03-02 22:38:32.000000000 +0100
+++ dyninst-9.3.1/symtabAPI/src/Object-elf.C	2017-04-09 20:52:53.689096202 +0200
@@ -3630,9 +3630,9 @@
                                    std::vector<ExceptionBlock> &addresses,
                                    const mach_relative_info &mi)
 {
-    Offset try_start = (Offset) -1;
-    Offset try_end = (Offset) -1;
-    Offset catch_start = 0;
+    unsigned long try_start = (unsigned long) -1;
+    unsigned long try_end = (unsigned long) -1;
+    unsigned long catch_start = 0;
 
     Elf_X_Data data = except_table->get_data();
     const unsigned char *datap = (const unsigned char *)data.get_string();
@@ -3652,7 +3652,7 @@
             i += read_val_of_type(DW_EH_PE_udata8, &catch_start, datap + i, mi);
         }
 
-        if (try_start != (Offset) -1 && try_end != (Offset) -1) {
+        if (try_start != (unsigned long) -1 && try_end != (unsigned long) -1) {
             ExceptionBlock eb(try_start, (unsigned) (try_end - try_start), catch_start);
             addresses.push_back(eb);
         }
--- dyninst-9.3.1/symtabAPI/src/emitElf.C.orig	2017-03-02 22:38:32.000000000 +0100
+++ dyninst-9.3.1/symtabAPI/src/emitElf.C	2017-04-09 21:05:01.219087893 +0200
@@ -651,7 +651,7 @@
             }
         }
 
-        vector<vector<unsigned long> > moveSecAddrRange = obj->getObject()->getMoveSecAddrRange();
+        vector<vector<Offset> > moveSecAddrRange = obj->getObject()->getMoveSecAddrRange();
 
         for (unsigned i = 0; i != moveSecAddrRange.size(); i++) {
             if ((moveSecAddrRange[i][0] == shdr->sh_addr) ||
--- dyninst-9.3.1/symtabAPI/src/dwarfWalker.C.orig	2017-04-09 21:31:37.515736334 +0200
+++ dyninst-9.3.1/symtabAPI/src/dwarfWalker.C	2017-04-09 21:31:42.419069611 +0200
@@ -1820,13 +1820,13 @@
    Dwarf_Attribute strattr;
 
    if (attr == DW_AT_call_file || attr == DW_AT_decl_file) {
-      unsigned long line_index;
+      Address line_index;
       bool result = findConstant(attr, line_index, entry(), dbg());
       if (!result)
          return false;
       if (line_index >= mod()->getStrings()->size()) {
-         dwarf_printf("Dwarf error reading line index %d from srcFiles of size %lu\n",
-                      line_index, mod()->getStrings()->size());
+         dwarf_printf("Dwarf error reading line index %lu from srcFiles of size %lu\n",
+                      (unsigned long)line_index, mod()->getStrings()->size());
          return false;
       }
 //       cout << "findString found " << (*srcFiles())[line_index].str << " at srcFiles[" << line_index << "] for " << mod()->fileName() << endl;
